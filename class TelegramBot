import org.telegram.telegrambots.ApiContextInitializer;
import org.telegram.telegrambots.TelegramBotsApi;
import org.telegram.telegrambots.bots.TelegramLongPoolingBot;

public class TelegramBot extends TelegramLongPoolingBot {
	public static void main(String[] args) {
		ApiContextInitializer.unit();
		TelegramBotsApi telegramBotsApi = new TelegramBotsApi();
		try {
			telegramBotsApi.registerBot(new Bot());
		}
		   catch (TelegramApiRequestException e) {
		   	e.printStackTrace();
		}
	}

	public void sendMsg(Message message, String text){
		SendMessage sendMessage = new SendMessage();
		sendMessage.enableMarkdown(true);
		sendMessage.setChatId(message,getChatId().toString());
		sendMessage.setReplyToMessageId(message.getMessageId());
		sendMessage.setText(text);
		try{
			sendMessage(sendMessage);		
		} catch(TelegramBotsApiExcepion e){
			e.printStackTrace();
		}
	}
	


	public void onUpdateReceived(Update update){
		Model model = new Model();
		Message message = update.getMessage();
		if(message !=null && message.hasText()){
			switch (message.getText()){
				case "/help":
				sendMsg(message, "Чем могу помочь?");
				break;
				case "/settings":
				sendMsg(message, "Что будем настраивать?");
				break;
				default:
				sendMsg(message, Timezone.getTimezone(message.getText(),model));
			}
		}
	}
	public String getBotUsername(){
		return "MrTimeZoneBot";
	}
	public String getBotToken(){
		return "1843615727:AAF-D_q1U8SLTxKo22UtLG0drJtEfvXLQvo";
	}

}
